/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.14).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import io.swagger.model.InlineResponse200;
import io.swagger.model.Reminder;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2019-11-16T21:07:28.234Z[GMT]")
@Api(value = "reminders", description = "the reminders API")
public interface RemindersApi {

    @ApiOperation(value = "Añade un nuevo recordatorio", nickname = "addReminder", notes = "", response = InlineResponse200.class, tags={ "Recordatorios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operación realizada con éxito", response = InlineResponse200.class),
        @ApiResponse(code = 405, message = "Entrada inválida") })
    @RequestMapping(value = "/reminders",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<InlineResponse200> addReminder(@ApiParam(value = "Añade un nuevo recordatorio" ,required=true )  @Valid @RequestBody Reminder body);


    @ApiOperation(value = "Cancelar un recordatorio", nickname = "cancelReminder", notes = "Cancela un recordatorio de la lista de recordatorios", tags={ "Recordatorios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 404, message = "No se encontró el recordatorio"),
        @ApiResponse(code = 405, message = "Entrada inválida") })
    @RequestMapping(value = "/reminders/{reminderId}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> cancelReminder(@ApiParam(value = "ID del recordatorio a cancelar",required=true) @PathVariable("reminderId") Long reminderId);


    @ApiOperation(value = "Busca un recordatorio por ID", nickname = "getReminderById", notes = "Devuelve el recordatorio cuyo ID sea el indicado", response = Reminder.class, tags={ "Recordatorios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operación realizada con éxito", response = Reminder.class),
        @ApiResponse(code = 404, message = "No se encontró el recordatorio"),
        @ApiResponse(code = 405, message = "Entrada inválida") })
    @RequestMapping(value = "/reminders/{reminderId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Reminder> getReminderById(@ApiParam(value = "ID del recordatorio",required=true) @PathVariable("reminderId") Long reminderId);


    @ApiOperation(value = "Busca los recordatorios por tipo", nickname = "getReminderByType", notes = "Devuelve los recordatorios cuyo tipo sea el indicado", response = Reminder.class, responseContainer = "List", tags={ "Recordatorios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operación realizada con éxito", response = Reminder.class, responseContainer = "List"),
        @ApiResponse(code = 405, message = "Entrada inválida"),
        @ApiResponse(code = 408, message = "No se encontraron recordatorios") })
    @RequestMapping(value = "/reminders/reminderstype/{reminderType}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Reminder>> getReminderByType(@ApiParam(value = "tipo del recordatorio",required=true, allowableValues="medicine, food, inactivity") @PathVariable("reminderType") String reminderType);


    @ApiOperation(value = "Obtiene todos los recordatorios", nickname = "getReminders", notes = "Devuelve la lista de recordatorios", response = Reminder.class, responseContainer = "List", tags={ "Recordatorios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Operación realizada con éxito", response = Reminder.class, responseContainer = "List"),
        @ApiResponse(code = 405, message = "Entrada inválida"),
        @ApiResponse(code = 408, message = "No se encontraron recordatorios") })
    @RequestMapping(value = "/reminders",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Reminder>> getReminders();


    @ApiOperation(value = "Actualiza un recordatorio existente", nickname = "updateReminder", notes = "Modifica la información de un recordatorio existente", tags={ "Recordatorios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 404, message = "No se encontró el recordatorio"),
        @ApiResponse(code = 405, message = "Entrada inválida") })
    @RequestMapping(value = "/reminders/{reminderId}",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateReminder(@ApiParam(value = "Información con la que se va a actualizar el recordatorio" ,required=true )  @Valid @RequestBody Reminder body,@ApiParam(value = "ID del recordatorio a modificar",required=true) @PathVariable("reminderId") Long reminderId);

}
